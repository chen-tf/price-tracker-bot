"""empty message

Revision ID: b51c4d115ab3
Revises: 
Create Date: 2022-12-22 16:16:29.872270

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b51c4d115ab3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('good_info',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('price', sa.BigInteger(), nullable=True),
    sa.Column('create_time', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('checksum', sa.String(length=16), nullable=True),
    sa.Column('stock_state', sa.Integer(), nullable=True, comment='0: out of stock\n1: in stock'),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('chat_id', sa.String(), nullable=True),
    sa.Column('create_time', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.Column('line_notify_token', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_sub_good',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('good_id', sa.String(), nullable=True),
    sa.Column('price', sa.BigInteger(), nullable=True),
    sa.Column('create_time', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_notified', sa.Boolean(), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True, comment='0: disable\n1: enable'),
    sa.ForeignKeyConstraint(['good_id'], ['good_info.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_sub_good', schema=None) as batch_op:
        batch_op.create_index('user_sub_good_good_id_idx', ['good_id', 'price'], unique=False)
        batch_op.create_index('user_sub_good_un', ['user_id', 'good_id'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_sub_good', schema=None) as batch_op:
        batch_op.drop_index('user_sub_good_un')
        batch_op.drop_index('user_sub_good_good_id_idx')

    op.drop_table('user_sub_good')
    op.drop_table('user')
    op.drop_table('good_info')
    # ### end Alembic commands ###
